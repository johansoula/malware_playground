#!/usr/bin/env python

import re
import subprocess
import shutil
import sys
import os
import hashlib
import urllib
import urllib2
import simplejson
import time
import json

def get_scanner_results(repo, vir):
    scanner_output = scan_dir(repo)

def scan_dir(directory):
    batches = []
    batch = dict()
    for root, dirs, files in os.walk(directory):
        for fname in files:
            f = os.path.join(root, fname)
            size = os.path.getsize(f)
            if size == 0:
                continue
            size =  size / 1048576
            if size > 32:
                continue
            data = open(f, 'rb').read()
            batch[hashlib.sha256(data).hexdigest()] = f
            if len(batch) == 4:
                batches.append(batch)
                batch = dict()
    if batch:
    	batches.append(batch)
    for b in batches:
        scan_batch(b)

def scan_batch(batch):
    url = "https://www.virustotal.com/vtapi/v2/file/report"
    apikey = ""
    delay = 5

    hashes= "";
    for f in batch:
        hashes += "%s, " % (f)
    if not hashes:
	return

    parameters = { "resource" : hashes,
                   "apikey" : apikey
    }
    data = urllib.urlencode(parameters)
    req = urllib2.Request(url, data)
    response = urllib2.urlopen(req)
    json = response.read()
    debug = open("detected_virus_debug.log", "a")
    debug.write(json)
    debug.write("\r\n");
    if json:
    	results = simplejson.loads(json);
	if type(results) is list:
		parse_output(results, batch, True)
	else:
		parse_output([results], batch, True)
    else:
	debug.write("try again later\r\n")
    debug.close
    time.sleep(delay)

def do_copy(src, dst):
    try:
        shutil.copy(src, dst)
    except:
        pass


def parse_output(output, batch, action):
    log = open("detected_virus.log", "a")

    for r in output:
          if r["response_code"] == 0:
              continue
          if r["positives"] == 0:
              continue

          filename = normalize2_filename(batch[r["sha256"]], "/")
          stats = "rate (%s/%s)" % (r["positives"], r["total"])
          scan = "file=\"%s\" engine=virustotal sig=\"%s => %s\"\r\n" % (filename,stats, r["permalink"])
          print scan
          log.write(scan)
          if action:
              do_copy("%s/%s" % (repo, filename), "%s/%s" % (vir, filename))
    log.close


def normalize2_filename(filename, delim):
    match = filename.rfind(delim)
    if match >= 0:
        match += 1
        return (filename[match:])
    else:
        return (filename)



if len(sys.argv) > 1:
    repo = sys.argv[1]
else:
    repo = "working_dir"

if len(sys.argv) > 2:
    vir = sys.argv[2]
else:
    vir = "virus"

scan = get_scanner_results(repo, vir)
    
exit(0)


